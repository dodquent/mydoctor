service: pros

provider:
  name: aws
  runtime: python3.6
  stage: production
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    API_URL: "https://api.sigyn.io/"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
  region: eu-west-1
  memorySize: 512

functions:
  pros:
    handler: handler.createPro
    events:
      - http:
          path: /
          method: post
  createPatient:
    handler: handler.createPatient
    events:
      - http:
          path: /createPatient
          method: post


resources:
 Resources:
   usersTable:
     Type: AWS::DynamoDB::Table
     Properties:
       AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
       KeySchema:
        - AttributeName: name
          KeyType: HASH
       ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
       TableName: ${self:provider.environment.DYNAMODB_TABLE}
